{"version":3,"sources":["components/Header/index.js","components/Container/index.js","components/SearchInput/index.js","components/Table/index.js","components/ResultRow/index.js","utils/API.js","pages/Search.js","App.js","index.js"],"names":["Header","className","Container","props","children","SearchInput","console","log","htmlFor","id","type","name","placeholder","value","onChange","handleInputChange","columns","image","width","phone","email","dob","Table","style","scope","ResultRow","data-id","src","alt","axios","get","Search","state","search","results","componentDidMount","getEmployees","API","then","res","setState","data","catch","err","formatDate","dayjs","format","event","target","this","filter","employee","first","toLowerCase","cell","test","includes","map","index","picture","thumbnail","last","date","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.716696f3.chunk.js","sourcesContent":["// Import modules\nimport React from 'react';\n\n// Header component function\nfunction Header() {\n  return (\n    <header className=\"bg-primary p-3\">\n      <h1 className=\"h4 mb-0 text-center text-light\">\n        Employee Directory\n      </h1>\n    </header>\n  );\n}\n\n// Export Header\nexport default Header;","// Import modules\nimport React from 'react';\n\n// Wrapper component constructor\nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\n// Export Wrapper component\nexport default Container;","// Import modules\nimport React from 'react';\n\n// Search input component function\nfunction SearchInput(props) {\n  console.log(props);\n  return (\n    <div className=\"form-group py-4\">\n      <label htmlFor=\"search\">\n        Filter employees by name or phone number:\n      </label>\n      <input \n        className=\"form-control\" \n        id=\"search\" \n        type=\"text\" \n        name=\"search\"\n        placeholder=\"Search by name or phone number\"\n        value={props.value}\n        onChange={props.handleInputChange}\n      />\n    </div>\n  );\n}\n\n// Export search input component\nexport default SearchInput;\n","// Import modules\nimport React from 'react';\n\n// Table column widths\nconst columns = {\n  image: {\n    width: '10%'\n  },\n  name: {\n    width: '30%'\n  },\n  phone: {\n    width: '20%'\n  },\n  email: {\n    width: '30%'\n  },\n  dob: {\n    width: '10%'\n  }\n}\n\n// Table component function\nfunction Table(props) {\n  return (\n    <table className=\"table table-hover table-striped p-0\">\n      <thead>\n        <tr>\n          <th style={columns.image} scope=\"col\">Image</th>\n          <th style={columns.name} scope=\"col\">Name</th>\n          <th style={columns.phone} scope=\"col\">Phone</th>\n          <th style={columns.email} scope=\"col\">Email</th>\n          <th style={columns.dob} scope=\"col\">DOB</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.children}\n      </tbody>\n    </table>\n  );\n}\n\n// Export Table\nexport default Table;","// Import modules\nimport React from 'react';\n\nfunction ResultRow(props) {\n  return (\n    <tr key={props.id} data-id={props.id}>\n      <th scope=\"row\" className=\"align-middle\">\n        <img \n          src={props.image}\n          alt=\"Company headshot\"\n        />\n      </th>\n      <td className=\"align-middle\">{props.name}</td>\n      <td className=\"align-middle\">{props.phone}</td>\n      <td className=\"align-middle\">{props.email}</td>\n      <td className=\"align-middle\">{props.dob}</td>\n    </tr>\n  );\n}\n\n// Export component\nexport default ResultRow;","/* eslint-disable import/no-anonymous-default-export */\n// Import modules\nimport axios from 'axios';\n\n// Endpoint\nconst endpoint = `https://randomuser.me/api/?seed=bootcamp&results=50&nat=us`;\n\n// Export API request methods\nexport default {\n  getEmployees: function() {\n    return axios.get(endpoint);\n  }\n}","// Import modules\nimport React, { Component } from 'react';\nimport Container from '../components/Container';\nimport SearchInput from '../components/SearchInput';\nimport Table from '../components/Table';\nimport ResultRow from '../components/ResultRow';\nimport API from '../utils/API';\nimport dayjs from 'dayjs';\n\n// Create search results container\nclass Search extends Component {\n  // Component state\n  state = {\n    search: '',\n    results: [],\n  };\n\n  // Load employees when search components mounts\n  componentDidMount = () => {\n    this.getEmployees();\n  };\n\n  // Make API call requesting employees array\n  getEmployees = () => {\n    API.getEmployees()\n      .then((res) => {\n        this.setState({ results: res.data.results });\n        console.log(this.state);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // Format DOB utility method\n  formatDate = (dob) => {\n    return dayjs(dob).format('MM/DD/YYYY');\n  };\n\n  // Handle search input change\n  handleInputChange = (event) => {\n    const { value } = event.target;\n    console.log(value);\n\n    this.setState({ search: value });\n  };\n\n  // Render output\n  render() {\n    return (\n      <main>\n        <Container>\n          <SearchInput\n            value={this.state.search}\n            handleInputChange={this.handleInputChange}\n          />\n          <Table>\n            {this.state.results\n              // First, filter out any results that don't include the search string\n              .filter((employee) => {\n                // Capture regex patterns for only letters and only numbers\n                let letters = /^[a-zA-Z]+$/;\n                let numbers = /^[0-9]+$/;\n\n                // Capture comparison fields\n                let name = employee.name.first.toLowerCase();\n                let phone = employee.cell;\n\n                // Capture the current state of the search string\n                let search = this.state.search;\n\n                // Determine whether user is searching by name, phone number, or neither\n                if (letters.test(search)) {\n                  return name.includes(search.toLowerCase());\n\n                } else if (numbers.test(search)) {\n                  return phone.includes(search);\n\n                } else {  \n                  return employee;\n                }\n              })\n              // Then map the remaining results and create table rows for each\n              .map((employee, index) => {\n                return (\n                  <ResultRow\n                    key={index}\n                    id={index}\n                    image={employee.picture.thumbnail}\n                    name={`${employee.name.first} ${employee.name.last}`}\n                    phone={employee.cell}\n                    email={employee.email}\n                    dob={this.formatDate(employee.dob.date)}\n                  />\n                );\n            })}\n          </Table>\n        </Container>\n      </main>\n    );\n  }\n}\n\n// Export Search class\nexport default Search;\n","// Import modules\nimport React from \"react\";\nimport Header from './components/Header';\nimport Search from \"./pages/Search\";\n\n// App component function\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Search />\n    </div>\n  );\n}\n\n// Export modules\nexport default App;\n","// Import modules\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Render App component\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}